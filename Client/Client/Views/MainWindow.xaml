<Window x:Class="Client.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:Client.ViewModels"
        mc:Ignorable="d"
        Title="Client" Height="500" MinHeight="480" Width="400" MinWidth="400" ResizeMode="CanResize"
        d:DataContext="{d:DesignInstance viewModels:DesignTimeMainWindowViewModel, IsDesignTimeCreatable=True}"
        DataContext="{Binding MainWindowViewModel, Source={StaticResource ViewModelLocator}}" >

    <Window.Resources >
        <!-- Files -->
        <DataTemplate x:Key="FileTemplate" DataType="viewModels:FileViewModel">
            <DockPanel MinWidth="25">
                <Image Height="25" Width="25" DockPanel.Dock="Right" Source="../Resources/tick.png" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{Binding IsCached, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <TextBlock Margin="0,0,5,0" DockPanel.Dock="Left" Foreground="Gray" Text="{Binding Name}" HorizontalAlignment="Left" VerticalAlignment="Center" TextWrapping="Wrap"/>
            </DockPanel>
        </DataTemplate>

        <!-- Resets ControlTemplate to get read of standard scrollbar + other styling-->
        <Style x:Key="ListViewStyle" TargetType="ListView">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <ItemsPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="SelectionMode" Value="Single"></Setter>
        </Style>

        <!-- Sets up ScrollViewers to correct width -->
        <Style x:Key="ScrollViewerStyle" TargetType="ScrollViewer">
            <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
        </Style>

        <!-- Style for Clear downloads button -->
        <Style x:Key="ClearDownloadsButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="LightGray" BorderThickness="0,2,0,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red"/>
                    <Setter Property="BorderBrush" Value="LightGray"/>
                </Trigger>
                <Trigger Property="Button.IsPressed" Value="True">
                    <Setter Property="Background" Value="DarkRed" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style for Refreash list button -->
        <Style x:Key="RefreshListButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="LightGray" BorderThickness="0,2,0,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Orange"/>
                    <Setter Property="BorderBrush" Value="LightGray"/>
                </Trigger>
                <Trigger Property="Button.IsPressed" Value="True">
                    <Setter Property="Background" Value="DarkOrange" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style for Download/Open File button -->
        <Style x:Key="DownloadOpenFileButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="LightGray" BorderThickness="0,2,0,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Green"/>
                    <Setter Property="BorderBrush" Value="LightGray"/>
                </Trigger>
                <Trigger Property="Button.IsPressed" Value="True">
                    <Setter Property="Background" Value="DarkGreen" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid Background="Black">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <DockPanel Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" HorizontalAlignment="Stretch" Margin="5,0,5,0">
            <TextBlock DockPanel.Dock="Left" Foreground="LightGray" Text="File Names"/>
            <TextBlock DockPanel.Dock="Right" Foreground="LightGray" HorizontalAlignment="Right" Text="Downloaded" />
        </DockPanel>

        <!-- List of files available to cache. Tick shows that file is already cached. -->
        <ScrollViewer Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" Style="{StaticResource ScrollViewerStyle}" Margin="0,0,5,0">
            <ListView Style="{StaticResource ListViewStyle}" 
                      ItemsSource="{Binding Files, Mode=OneWay}"
                      ItemTemplate="{StaticResource FileTemplate}"
                      SelectedItem="{Binding SelectedFile, Mode=TwoWay}"/>
        </ScrollViewer>

        <Button Grid.Column="0" Grid.Row="2" Content="Clear downloads" Style="{StaticResource ClearDownloadsButtonStyle}" Click="ClearDownloadsButton_OnClick" IsEnabled="{Binding OperationInProgress, Converter={StaticResource InverseBooleanConverter}}"/>
        <Button Grid.Column="1" Grid.Row="2" Content="Refresh list" Style="{StaticResource RefreshListButtonStyle}" Click="RefreshListButton_OnClick" IsEnabled="{Binding OperationInProgress, Converter={StaticResource InverseBooleanConverter}}"/>
        <Button Grid.Column="2" Grid.Row="2" Content="{Binding DownloadOpenFileButtonText}" Style="{StaticResource DownloadOpenFileButtonStyle}" Click="DownloadOpenFileButton_OnClick" IsEnabled="{Binding OperationInProgress, Converter={StaticResource InverseBooleanConverter}}"/>
    </Grid>
</Window>